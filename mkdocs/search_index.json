{
    "docs": [
        {
            "location": "/",
            "text": "Maven project for generating a Java wrapper around \nrsync\n \nfor Linux, Mac OSX and Windows. \n\n\nFor Windows, binaries are included in the jars and \nrsync4j\n \nwill set up an environment in the user's home directory (\n%USERPROFILE%\\rsync4j\n)\non first usage (can be customized, see Section \nCustom location\n). \n\n\nNow supports 32-bit and 64-bit platforms.",
            "title": "Home"
        },
        {
            "location": "/commandline/",
            "text": "RSync\n\n\nThe options of the \ncom.github.fracpete.rsync4j.RSync\n tool are modeled after\nthe \nrsync\n executable itself. Here is the help screen:\n\n\nusage: com.github.fracpete.rsync4j.RSync\n       [-h] [--output-commandline] [--maxtime MAXTIME] [-v]\n       [--info INFO] [--debug DEBUG] [--msgs2stderr] [-q] [--no-motd] [-c]\n       [-a] [-r] [-R] [--no-implied-dirs] [-b] [--backup-dir BACKUPDIR]\n       [--suffix SUFFIX] [-u] [--inplace] [--append] [--append-verify] [-d]\n       [-l] [-L] [--copy-unsafe-links] [--safe-links] [--munge-links] [-k]\n       [-K] [-H] [-p] [-E] [--chmod CHMOD] [-X] [-o] [-g] [--devices]\n       [--specials] [-t] [-O] [-J] [--super] [--fake-super] [-S]\n       [--preallocate] [-n] [-W] [-x] [-B BLOCKSIZE] [-e RSH]\n       [--rsync-path RSYNCPATH] [--existing] [--ignore-existing]\n       [--remove-source-files] [--delete] [--delete-before]\n       [--delete-during] [--delete-delay] [--delete-after]\n       [--delete-excluded] [--ignore-missing-args] [--delete-missing-args]\n       [--ignore-errors] [--force] [--max-delete MAXDELETE]\n       [--max-size MAXSIZE] [--min-size MINSIZE] [--partial]\n       [--partial-dir PARTIALDIR] [--delay-updates] [-m] [--numeric-ids]\n       [--usermap USERMAP] [--groupmap GROUPMAP] [--chown CHOWN]\n       [--timeout TIMEOUT] [--contimeout CONTIMEOUT] [-I] [-M REMOTEOPTION]\n       [--size-only] [--modify-window MODIFYWINDOW] [-T TEMPDIR] [-y]\n       [--compare-dest COMPAREDEST] [--copy-dest COPYDEST]\n       [--link-dest LINKDEST] [-z] [--compress-level COMPRESSLEVEL]\n       [--skip-compress SKIPCOMPRESS] [-C] [-f FILTER] [--exclude EXCLUDE]\n       [--exclude-from EXCLUDEFROM] [--include INCLUDE]\n       [--include-from INCLUDEFROM] [--files-from FILESFROM] [-0] [-s]\n       [--address ADDRESS] [--port PORT] [--sockopts SOCKOPTS]\n       [--blocking-io] [--stats] [-8] [--human-readable] [--progress] [-i]\n       [--out-format OUTFORMAT] [--log-file LOGFILE]\n       [--log-file-format LOGFILEFORMAT] [--password-file PASSWORDFILE]\n       [--list-only] [--bwlimit BWLIMIT] [--outbuf OUTBUF]\n       [--write-batch WRITEBATCH] [--only-write-batch ONLYWRITEBATCH]\n       [--read-batch READBATCH] [--protocol PROTOCOL] [--iconv ICONV]\n       [--checkum-seed CHECKSUMSEED] [-4] [-6] [--version]\n       [--additional ADDITIONAL]\n       [source(s)/destination [source(s)/destination ...]]\n\nA fast, versatile, remote (and local) file-copying tool.\nSee man page:\nhttps://linux.die.net/man/1/rsync\n\npositional arguments:\n  source(s)/destination  Multiple local/remote paths  (path or [user@]host:\n                         path), with the last one  being the target and the\n                         others the source(s).\n\noptional arguments:\n  -h, --help             show this help message and exit\n  --output-commandline   output the command-line generated  for the wrapped\n                         binary\n  --maxtime MAXTIME      set the maximum time  for  the  process  to run in\n                         seconds before getting killed\n  -v, --verbose          increase verbosity\n  --info INFO            fine-grained informational verbosity\n  --debug DEBUG          fine-grained debug verbosity\n  --msgs2stderr          special output handling for debugging\n  -q, --quiet            suppress non-error messages\n  --no-motd              suppress daemon-mode MOTD\n  -c, --checksum         skip based on checksum, not mod-time & size\n  -a, --archive          archive mode; equals -rlptgoD (no -H,-A,-X)\n  -r, --recursive        recurse into directories\n  -R, --relative         use relative path names\n  --no-implied-dirs      use relative path names\n  -b, --backup           make backups (see --suffix & --backup-dir)\n  --backup-dir BACKUPDIR\n                         make backups into hierarchy based in DIR\n  --suffix SUFFIX        set backup suffix (default ~ w/o --backup-dir)\n  -u, --update           skip files that are newer on the receiver\n  --inplace              update destination files in-place\n  --append               append data onto shorter files\n  --append-verify        like --append, but with old data in file checksum\n  -d, --dirs             transfer directories without recursing\n  -l, --links            copy symlinks as symlinks\n  -L, --copy-links       transform symlink into referent file/dir\n  --copy-unsafe-links    only \"unsafe\" symlinks are transformed\n  --safe-links           ignore symlinks that point outside the source tree\n  --munge-links          munge symlinks to make them safer (but unusable)\n  -k, --copy-dirlinks    transform symlink to a dir into referent dir\n  -K, --keep-dirlinks    treat symlinked dir on receiver as dir\n  -H, --hard-links       preserve hard links\n  -p, --perms            preserve permissions\n  -E, --executability    preserve the file's executability\n  --chmod CHMOD          affect file and/or directory permissions\n  -X, --xattrs           preserve extended attributes\n  -o, --owner            preserve owner (super-user only)\n  -g, --group            preserve group\n  --devices              preserve device files (super-user only)\n  --specials             preserve special files\n  -t, --times            preserve modification times\n  -O, --omit-dir-times   omit directories from --times\n  -J, --omit-link-times  omit symlinks from --times\n  --super                receiver attempts super-user activities\n  --fake-super           store/recover privileged attrs using xattrs\n  -S, --sparse           handle sparse files efficiently\n  --preallocate          allocate dest files before writing them\n  -n, --dry-run          perform a trial run with no changes made\n  -W, --whole-file       copy files whole (without delta-xfer algorithm)\n  -x, --one-file-system  don't cross filesystem boundaries\n  -B BLOCKSIZE, --block-size BLOCKSIZE\n                         force a fixed checksum block-size\n  -e RSH, --rsh RSH      specify the remote shell to use.\n                         On Windows, use 'ssh' to  use built-in ssh binary;\n                         otherwise    use    absolute    path,    eg    'C:\n                         \\somewhere\\ssh' or '/usr/bin/ssh'.\n                         Uses plain protocol if left empty.\n  --rsync-path RSYNCPATH\n                         specify the rsync to run on the remote machine\n  --existing             skip creating new files on receiver\n  --ignore-existing      skip updating files that already exist on receiver\n  --remove-source-files  sender removes synchronized files (non-dirs)\n  --delete               delete extraneous files from destination dirs\n  --delete-before        receiver deletes before transfer, not during\n  --delete-during        receiver deletes during the transfer\n  --delete-delay         find deletions during, delete after\n  --delete-after         receiver deletes after transfer, not during\n  --delete-excluded      also delete excluded files from destination dirs\n  --ignore-missing-args  ignore missing source args without error\n  --delete-missing-args  delete missing source args from destination\n  --ignore-errors        delete even if there are I/O errors\n  --force                force deletion of directories even if not empty\n  --max-delete MAXDELETE\n                         don't delete more than NUM files\n  --max-size MAXSIZE     don't transfer any file larger than SIZE\n  --min-size MINSIZE     don't transfer any file smaller than SIZE\n  --partial              keep partially transferred files\n  --partial-dir PARTIALDIR\n                         put a partially transferred file into DIR\n  --delay-updates        put all updated files into place at transfer's end\n  -m, --prune-empty-dirs\n                         prune empty directory chains from the file-list\n  --numeric-ids          don't map uid/gid values by user/group name\n  --usermap USERMAP      custom username mapping\n  --groupmap GROUPMAP    custom groupname mapping\n  --chown CHOWN          simple username/groupname mapping\n  --timeout TIMEOUT      set I/O timeout in seconds\n  --contimeout CONTIMEOUT\n                         set daemon connection timeout in seconds\n  -I, --ignore-times     don't skip files that match in size and mod-time\n  -M REMOTEOPTION, --remote-option REMOTEOPTION\n                         send OPTION to the remote side only\n  --size-only            skip files that match in size\n  --modify-window MODIFYWINDOW\n                         compare mod-times with reduced accuracy\n  -T TEMPDIR, --temp-dir TEMPDIR\n                         create temporary files in directory DIR\n  -y, --fuzzy            find similar file for basis if no dest file\n  --compare-dest COMPAREDEST\n                         also compare destination files relative to DIR\n  --copy-dest COPYDEST   ... and include copies of unchanged files\n  --link-dest LINKDEST   hardlink to files in DIR when unchanged\n  -z, --compress         compress file data during the transfer\n  --compress-level COMPRESSLEVEL\n                         explicitly set compression level\n  --skip-compress SKIPCOMPRESS\n                         skip compressing files with a suffix in LIST\n  -C, --cvs-exclude      auto-ignore files the same way CVS does\n  -f FILTER, --filter FILTER\n                         add a file-filtering RULE\n  --exclude EXCLUDE      exclude files matching PATTERN\n  --exclude-from EXCLUDEFROM\n                         read exclude patterns from FILE\n  --include INCLUDE      include files matching PATTERN\n  --include-from INCLUDEFROM\n                         read include patterns from FILE\n  --files-from FILESFROM\n                         read list of source-file names from FILE\n  -0, --from0            all *-from/filter files are delimited by 0s\n  -s, --protect-args     no space-splitting; only wildcard special-chars\n  --address ADDRESS      bind address for outgoing socket to daemon\n  --port PORT            specify double-colon alternate port number\n  --sockopts SOCKOPTS    specify custom TCP options\n  --blocking-io          use blocking I/O for the remote shell\n  --stats                give some file-transfer stats\n  -8, --8-bit-output     leave high-bit chars unescaped in output\n  --human-readable       output numbers in a human-readable format\n  --progress             show progress during transfer\n  -i, --itemize-changes  output a change-summary for all updates\n  --out-format OUTFORMAT\n                         output updates using the specified FORMAT\n  --log-file LOGFILE     log what we're doing to the specified FILE\n  --log-file-format LOGFILEFORMAT\n                         log updates using the specified FMT\n  --password-file PASSWORDFILE\n                         read daemon-access password from FILE\n  --list-only            list the files instead of copying them\n  --bwlimit BWLIMIT      limit socket I/O bandwidth\n  --outbuf OUTBUF        set output  buffering  to  None,  Line,  or  Block\n                         (N|L|B)\n  --write-batch WRITEBATCH\n                         write a batched update to FILE\n  --only-write-batch ONLYWRITEBATCH\n                         like --write-batch but w/o updating destination\n  --read-batch READBATCH\n                         read a batched update from FILE\n  --protocol PROTOCOL    force an older protocol version to be used\n  --iconv ICONV          request charset conversion of filenames\n  --checkum-seed CHECKSUMSEED\n                         set block/file checksum seed (advanced)\n  -4, --ipv4             prefer IPv4\n  -6, --ipv6             prefer IPv6\n  --version              print version number\n  --additional ADDITIONAL\n                         generic option to pass  on  to rsync; for command-\n                         line parsing to work  though,  leading dashes must\n                         get   replaced   with    '+',   eg   '--additional\n                         \"++exclude=*~\"'\n\n\n\n\nSsh\n\n\nThe options of the \ncom.github.fracpete.rsync4j.Ssh\n tool are modeled after\nthe \nssh\n executable itself. Here is the help screen:\n\n\nusage: com.github.fracpete.rsync4j.Ssh\n       [-h] [--output-commandline] [--maxtime MAXTIME] [-1] [-2] [-4]\n       [-6] [-A] [-a] [-b BINDADDRESS] [-C] [-c CIPHERSPEC]\n       [-D DYNAMICBINDADDRESS] [-E LOGFILE] [-e ESCAPECHAR] [-F CONFIGFILE]\n       [-f] [-G] [-g] [-I PKCS11] [-K] [-k] [-L LOCAL] [-l LOGINNAME] [-M]\n       [-m MACSPEC] [-N] [-n] [-O CONTROLCOMMAND] [-o OPTION] [-p PORT]\n       [-q] [-R REMOTE] [-s] [-T] [-t] [-v] [-vv] [-vvv] [-W FORWARDTO]\n       [-w FORWARDTUNNEL] [-X] [-x] [-Y] [-y] hostname  [command]\n\nOpenSSH  SSH  client  (remote  login   program).  No  interactive  sessions\npossible.\nSee man page:\nhttps://linux.die.net/man/1/ssh\n\npositional arguments:\n  hostname               The hostname to connect to.\n                         The hostname to connect to.\n  command                The remote command to execute.\n\noptional arguments:\n  -h, --help             show this help message and exit\n  --output-commandline   output the command-line generated  for the wrapped\n                         binary\n  --maxtime MAXTIME      set the maximum time  for  the  process  to run in\n                         seconds before getting killed\n  -1                     Forces ssh to try protocol version 1 only.\n  -2                     Forces ssh to try protocol version 2 only.\n  -4                     Forces ssh to use IPv4 addresses only.\n  -6                     Forces ssh to use IPv6 addresses only.\n  -A                     Enables forwarding  of  the  authentication  agent\n                         connection.\n  -a                     Disables forwarding  of  the  authentication agent\n                         connection.\n  -b BINDADDRESS         Use bind_address  on  the  local  machine  as  the\n                         source address of the connection.\n  -C                     Requests compression of all data.\n  -c CIPHERSPEC          Selects the  cipher  specification  for encrypting\n                         the session.\n  -D DYNAMICBINDADDRESS  Specifies  a  local   \u201cdynamic\u201d  application-level\n                         port forwarding ([bind_address:]port).\n  -E LOGFILE             Append debug logs to  log_file instead of standard\n                         error.\n  -e ESCAPECHAR          Sets the escape character for  sessions with a pty\n                         (default: \u2018~\u2019).\n  -F CONFIGFILE          Specifies an  alternative  per-user  configuration\n                         file.\n  -f                     Requests ssh  to  go  to  background  just  before\n                         command execution.\n  -G                     Causes  ssh  to  print   its  configuration  after\n                         evaluating Host and Match blocks and exit.\n  -g                     Allows remote hosts to  connect to local forwarded\n                         ports\n  -I PKCS11              Specify the PKCS#11 shared  library ssh should use\n                         to communicate with a  PKCS#11 token providing the\n                         user's private RSA key.\n  -K                     Enables    GSSAPI-based     authentication     and\n                         forwarding (delegation) of  GSSAPI  credentials to\n                         the server.\n  -k                     Disables   forwarding   (delegation)   of   GSSAPI\n                         credentials to the server.\n  -L LOCAL               Specifies that connections to  the  given TCP port\n                         or Unix socket on the  local  (client) host are to\n                         be forwarded to the given  host  and port, or Unix\n                         socket, on the remote side.\n  -l LOGINNAME           Specifies the user  to  log  in  as  on the remote\n                         machine.\n  -M                     Places the  ssh  client  into  \u201cmaster\u201d  mode  for\n                         connection sharing.\n  -m MACSPEC             A   comma-separated   list    of    MAC   (message\n                         authentication  code)  algorithms,   specified  in\n                         order of preference.\n  -N                     Do not execute a  remote  command.  This is useful\n                         for just forwarding ports.\n  -n                     Redirects   stdin   from    /dev/null   (actually,\n                         prevents reading from stdin).\n  -O CONTROLCOMMAND      Control an active  connection  multiplexing master\n                         process.\n  -o OPTION              Can be used to give options  in the format used in\n                         the configuration file.\n  -p PORT                Port to connect to on the remote host.\n  -q                     Quiet mode.  Causes  most  warning  and diagnostic\n                         messages to be suppressed.\n  -R REMOTE              Specifies that connections to  the  given TCP port\n                         or Unix socket on the  remote (server) host are to\n                         be forwarded to the given  host  and port, or Unix\n                         socket, on the local side.\n  -s                     May be used to  request  invocation of a subsystem\n                         on the remote system.\n  -T                     Disable pseudo-terminal allocation.\n  -t                     Force pseudo-terminal allocation.\n  -v                     Verbose mode.\n  -vv                    Very verbose mode.\n  -vvv                   Very, very verbose mode.\n  -W FORWARDTO           Requests that standard  input  and  output  on the\n                         client be  forwarded  to  host  on  port  over the\n                         secure channel.\n  -w FORWARDTUNNEL       Requests  tunnel   device   forwarding   with  the\n                         specified  tun(4)  devices   between   the  client\n                         (local_tun) and the server (remote_tun).\n  -X                     Enables X11 forwarding.\n  -x                     Disables X11 forwarding.\n  -Y                     Enables trusted X11 forwarding.\n  -y                     Send  log  information  using  the  syslog  system\n                         module.\n\n\n\n\nSshKeyGen\n\n\nThe options of the \ncom.github.fracpete.rsync4j.SshKeyGen\n tool are modeled after\nthe \nssh-keygen\n executable itself. Here is the help screen:\n\n\nusage: com.github.fracpete.rsync4j.SshKeyGen\n       [-h] [--output-commandline] [-A] [-a ROUNDS] [-B] [-b BITS]\n       [-C COMMENT] [-D PKCS11] [-E FINGERPRINT] [-e] [-F FINDHOST]\n       [-f KEYFILE] [-G CANDIDATEPRIMES] [-g] [-H] [--host] [-i]\n       [-J SCREENNUMLINES] [-j SCREENSTARTLINE] [-K SCREENCHECKPOINT] [-k]\n       [-L] [-l] [-M MEMORY] [-m KEYFORMAT] [-N NEWPASSPHRASE]\n       [-n PRINCIPALS] [-O OPTION] [-o] [-P PASSPHRASE] [-p] [-Q] [-q]\n       [-R REMOVEKEYS] [-r PRINTFINGERPRINT] [-S STARTPOINT] [-s SIGNCAKEY]\n       [-T TESTCANDIDATEPRIMES] [-t KEYTYPE] [-u] [-V VALIDITYINTERVAL]\n       [-v] [-vv] [-vvv] [-W GENERATOR] [-y] [-z SERIALNUMBER]\n       [file [file ...]]\n\nAuthentication key generation, management and conversion.\nSee man page:\nhttps://linux.die.net/man/1/ssh-keygen\n\npositional arguments:\n  file                   The key file(s).\n\noptional arguments:\n  -h, --help             show this help message and exit\n  --output-commandline   output the command-line generated  for the wrapped\n                         binary\n  -A                     For each of the key  types  (rsa1, rsa, dsa, ecdsa\n                         and ed25519) for  which  host  keys  do not exist,\n                         generate the host keys  with  the default key file\n                         path, an empty  passphrase,  default  bits for the\n                         key type, and default comment.\n  -a ROUNDS              When saving  a  new-format  private  key  (i.e. an\n                         ed25519 key or any SSH protocol  2 key when the -o\n                         flag is set), this option  specifies the number of\n                         KDF (key derivation function) rounds used.\n  -B                     Show the bubblebabble digest  of specified private\n                         or public key file.\n  -b BITS                Specifies the number of bits in the key to create.\n  -C COMMENT             Provides a new comment.\n  -D PKCS11              Download the  RSA  public  keys  provided  by  the\n                         PKCS#11 shared library pkcs11.\n  -E FINGERPRINT         Specifies the hash algorithm  used when displaying\n                         key fingerprints.\n  -e                     This option will read a  private or public OpenSSH\n                         key file and print  to  stdout  the  key in one of\n                         the formats specified by the -m option.\n  -F FINDHOST            Search   for   the   specified   hostname   in   a\n                         known_hosts file, listing any occurrences found.\n  -f KEYFILE             Specifies the filename of the key file.\n  -G CANDIDATEPRIMES     Generate candidate primes for DH-GEX..\n  -g                     Use generic DNS  format  when printing fingerprint\n                         resource records using the -r command.\n  -H                     Hash a known_hosts file.\n  --host                 When signing  a  key,  create  a  host certificate\n                         instead of a user certificate.\n  -i                     This option will read  an  unencrypted private (or\n                         public) key file in the  format specified by the -\n                         m option and print  an  OpenSSH compatible private\n                         (or public) key to stdout.\n  -J SCREENNUMLINES      Exit  after  screening  the  specified  number  of\n                         lines  while  performing  DH  candidate  screening\n                         using the -T option.\n  -j SCREENSTARTLINE     Start  screening  at  the  specified  line  number\n                         while performing DH candidate  screening using the\n                         -T option.\n  -K SCREENCHECKPOINT    Write the last line processed  to the file checkpt\n                         while performing DH candidate  screening using the\n                         -T option.\n  -k                     Generate a KRL file.\n  -L                     Prints the contents of one or more certificates.\n  -l                     Show fingerprint of specified public key file.\n  -M MEMORY              Specify  the  amount   of   memory   to   use  (in\n                         megabytes) when  generating  candidate  moduli for\n                         DH-GEX.\n  -m KEYFORMAT           Specify a key format  for  the  -i  (import) or -e\n                         (export) conversion options.\n  -N NEWPASSPHRASE       Provides the new passphrase.\n  -n PRINCIPALS          Specify one  or  more  principals  (user  or  host\n                         names)  to  be  included  in  a  certificate  when\n                         signing a key.\n  -O OPTION              Specify a certificate option when signing a key.\n  -o                     Causes ssh-keygen to save  private  keys using the\n                         new  OpenSSH   format   rather   than   the   more\n                         compatible PEM format.\n  -P PASSPHRASE          Provides the (old) passphrase.\n  -p                     Requests changing the passphrase  of a private key\n                         file instead of creating a new private key.\n  -Q                     Test whether keys have been revoked in a KRL.\n  -q                     Silence ssh-keygen.\n  -R REMOVEKEYS          Removes all  keys  belonging  to  hostname  from a\n                         known_hosts file.\n  -r PRINTFINGERPRINT    Print the SSHFP fingerprint  resource record named\n                         hostname for the specified public key file.\n  -S STARTPOINT          Specify  start  point  (in  hex)  when  generating\n                         candidate moduli for DH-GEX.\n  -s SIGNCAKEY           Certify (sign) a  public  key  using the specified\n                         CA key.\n  -T TESTCANDIDATEPRIMES\n                         Test   DH   group    exchange   candidate   primes\n                         (generated using the -G option) for safety.\n  -t KEYTYPE             Specifies the type of key to create.\n  -u                     Update a KRL.\n  -V VALIDITYINTERVAL    Specify  a  validity   interval   when  signing  a\n                         certificate.\n  -v                     Verbose mode.\n  -vv                    Very verbose mode.\n  -vvv                   Very, very verbose mode.\n  -W GENERATOR           Specify desired generator  when  testing candidate\n                         moduli for DH-GEX.\n  -y                     This option will  read  a  private  OpenSSH format\n                         file and print an OpenSSH public key to stdout.\n  -z SERIALNUMBER        Specifies a serial number  to  be  embedded in the\n                         certificate to distinguish  this  certificate from\n                         others from the same CA.",
            "title": "Command-line"
        },
        {
            "location": "/commandline/#rsync",
            "text": "The options of the  com.github.fracpete.rsync4j.RSync  tool are modeled after\nthe  rsync  executable itself. Here is the help screen:  usage: com.github.fracpete.rsync4j.RSync\n       [-h] [--output-commandline] [--maxtime MAXTIME] [-v]\n       [--info INFO] [--debug DEBUG] [--msgs2stderr] [-q] [--no-motd] [-c]\n       [-a] [-r] [-R] [--no-implied-dirs] [-b] [--backup-dir BACKUPDIR]\n       [--suffix SUFFIX] [-u] [--inplace] [--append] [--append-verify] [-d]\n       [-l] [-L] [--copy-unsafe-links] [--safe-links] [--munge-links] [-k]\n       [-K] [-H] [-p] [-E] [--chmod CHMOD] [-X] [-o] [-g] [--devices]\n       [--specials] [-t] [-O] [-J] [--super] [--fake-super] [-S]\n       [--preallocate] [-n] [-W] [-x] [-B BLOCKSIZE] [-e RSH]\n       [--rsync-path RSYNCPATH] [--existing] [--ignore-existing]\n       [--remove-source-files] [--delete] [--delete-before]\n       [--delete-during] [--delete-delay] [--delete-after]\n       [--delete-excluded] [--ignore-missing-args] [--delete-missing-args]\n       [--ignore-errors] [--force] [--max-delete MAXDELETE]\n       [--max-size MAXSIZE] [--min-size MINSIZE] [--partial]\n       [--partial-dir PARTIALDIR] [--delay-updates] [-m] [--numeric-ids]\n       [--usermap USERMAP] [--groupmap GROUPMAP] [--chown CHOWN]\n       [--timeout TIMEOUT] [--contimeout CONTIMEOUT] [-I] [-M REMOTEOPTION]\n       [--size-only] [--modify-window MODIFYWINDOW] [-T TEMPDIR] [-y]\n       [--compare-dest COMPAREDEST] [--copy-dest COPYDEST]\n       [--link-dest LINKDEST] [-z] [--compress-level COMPRESSLEVEL]\n       [--skip-compress SKIPCOMPRESS] [-C] [-f FILTER] [--exclude EXCLUDE]\n       [--exclude-from EXCLUDEFROM] [--include INCLUDE]\n       [--include-from INCLUDEFROM] [--files-from FILESFROM] [-0] [-s]\n       [--address ADDRESS] [--port PORT] [--sockopts SOCKOPTS]\n       [--blocking-io] [--stats] [-8] [--human-readable] [--progress] [-i]\n       [--out-format OUTFORMAT] [--log-file LOGFILE]\n       [--log-file-format LOGFILEFORMAT] [--password-file PASSWORDFILE]\n       [--list-only] [--bwlimit BWLIMIT] [--outbuf OUTBUF]\n       [--write-batch WRITEBATCH] [--only-write-batch ONLYWRITEBATCH]\n       [--read-batch READBATCH] [--protocol PROTOCOL] [--iconv ICONV]\n       [--checkum-seed CHECKSUMSEED] [-4] [-6] [--version]\n       [--additional ADDITIONAL]\n       [source(s)/destination [source(s)/destination ...]]\n\nA fast, versatile, remote (and local) file-copying tool.\nSee man page:\nhttps://linux.die.net/man/1/rsync\n\npositional arguments:\n  source(s)/destination  Multiple local/remote paths  (path or [user@]host:\n                         path), with the last one  being the target and the\n                         others the source(s).\n\noptional arguments:\n  -h, --help             show this help message and exit\n  --output-commandline   output the command-line generated  for the wrapped\n                         binary\n  --maxtime MAXTIME      set the maximum time  for  the  process  to run in\n                         seconds before getting killed\n  -v, --verbose          increase verbosity\n  --info INFO            fine-grained informational verbosity\n  --debug DEBUG          fine-grained debug verbosity\n  --msgs2stderr          special output handling for debugging\n  -q, --quiet            suppress non-error messages\n  --no-motd              suppress daemon-mode MOTD\n  -c, --checksum         skip based on checksum, not mod-time & size\n  -a, --archive          archive mode; equals -rlptgoD (no -H,-A,-X)\n  -r, --recursive        recurse into directories\n  -R, --relative         use relative path names\n  --no-implied-dirs      use relative path names\n  -b, --backup           make backups (see --suffix & --backup-dir)\n  --backup-dir BACKUPDIR\n                         make backups into hierarchy based in DIR\n  --suffix SUFFIX        set backup suffix (default ~ w/o --backup-dir)\n  -u, --update           skip files that are newer on the receiver\n  --inplace              update destination files in-place\n  --append               append data onto shorter files\n  --append-verify        like --append, but with old data in file checksum\n  -d, --dirs             transfer directories without recursing\n  -l, --links            copy symlinks as symlinks\n  -L, --copy-links       transform symlink into referent file/dir\n  --copy-unsafe-links    only \"unsafe\" symlinks are transformed\n  --safe-links           ignore symlinks that point outside the source tree\n  --munge-links          munge symlinks to make them safer (but unusable)\n  -k, --copy-dirlinks    transform symlink to a dir into referent dir\n  -K, --keep-dirlinks    treat symlinked dir on receiver as dir\n  -H, --hard-links       preserve hard links\n  -p, --perms            preserve permissions\n  -E, --executability    preserve the file's executability\n  --chmod CHMOD          affect file and/or directory permissions\n  -X, --xattrs           preserve extended attributes\n  -o, --owner            preserve owner (super-user only)\n  -g, --group            preserve group\n  --devices              preserve device files (super-user only)\n  --specials             preserve special files\n  -t, --times            preserve modification times\n  -O, --omit-dir-times   omit directories from --times\n  -J, --omit-link-times  omit symlinks from --times\n  --super                receiver attempts super-user activities\n  --fake-super           store/recover privileged attrs using xattrs\n  -S, --sparse           handle sparse files efficiently\n  --preallocate          allocate dest files before writing them\n  -n, --dry-run          perform a trial run with no changes made\n  -W, --whole-file       copy files whole (without delta-xfer algorithm)\n  -x, --one-file-system  don't cross filesystem boundaries\n  -B BLOCKSIZE, --block-size BLOCKSIZE\n                         force a fixed checksum block-size\n  -e RSH, --rsh RSH      specify the remote shell to use.\n                         On Windows, use 'ssh' to  use built-in ssh binary;\n                         otherwise    use    absolute    path,    eg    'C:\n                         \\somewhere\\ssh' or '/usr/bin/ssh'.\n                         Uses plain protocol if left empty.\n  --rsync-path RSYNCPATH\n                         specify the rsync to run on the remote machine\n  --existing             skip creating new files on receiver\n  --ignore-existing      skip updating files that already exist on receiver\n  --remove-source-files  sender removes synchronized files (non-dirs)\n  --delete               delete extraneous files from destination dirs\n  --delete-before        receiver deletes before transfer, not during\n  --delete-during        receiver deletes during the transfer\n  --delete-delay         find deletions during, delete after\n  --delete-after         receiver deletes after transfer, not during\n  --delete-excluded      also delete excluded files from destination dirs\n  --ignore-missing-args  ignore missing source args without error\n  --delete-missing-args  delete missing source args from destination\n  --ignore-errors        delete even if there are I/O errors\n  --force                force deletion of directories even if not empty\n  --max-delete MAXDELETE\n                         don't delete more than NUM files\n  --max-size MAXSIZE     don't transfer any file larger than SIZE\n  --min-size MINSIZE     don't transfer any file smaller than SIZE\n  --partial              keep partially transferred files\n  --partial-dir PARTIALDIR\n                         put a partially transferred file into DIR\n  --delay-updates        put all updated files into place at transfer's end\n  -m, --prune-empty-dirs\n                         prune empty directory chains from the file-list\n  --numeric-ids          don't map uid/gid values by user/group name\n  --usermap USERMAP      custom username mapping\n  --groupmap GROUPMAP    custom groupname mapping\n  --chown CHOWN          simple username/groupname mapping\n  --timeout TIMEOUT      set I/O timeout in seconds\n  --contimeout CONTIMEOUT\n                         set daemon connection timeout in seconds\n  -I, --ignore-times     don't skip files that match in size and mod-time\n  -M REMOTEOPTION, --remote-option REMOTEOPTION\n                         send OPTION to the remote side only\n  --size-only            skip files that match in size\n  --modify-window MODIFYWINDOW\n                         compare mod-times with reduced accuracy\n  -T TEMPDIR, --temp-dir TEMPDIR\n                         create temporary files in directory DIR\n  -y, --fuzzy            find similar file for basis if no dest file\n  --compare-dest COMPAREDEST\n                         also compare destination files relative to DIR\n  --copy-dest COPYDEST   ... and include copies of unchanged files\n  --link-dest LINKDEST   hardlink to files in DIR when unchanged\n  -z, --compress         compress file data during the transfer\n  --compress-level COMPRESSLEVEL\n                         explicitly set compression level\n  --skip-compress SKIPCOMPRESS\n                         skip compressing files with a suffix in LIST\n  -C, --cvs-exclude      auto-ignore files the same way CVS does\n  -f FILTER, --filter FILTER\n                         add a file-filtering RULE\n  --exclude EXCLUDE      exclude files matching PATTERN\n  --exclude-from EXCLUDEFROM\n                         read exclude patterns from FILE\n  --include INCLUDE      include files matching PATTERN\n  --include-from INCLUDEFROM\n                         read include patterns from FILE\n  --files-from FILESFROM\n                         read list of source-file names from FILE\n  -0, --from0            all *-from/filter files are delimited by 0s\n  -s, --protect-args     no space-splitting; only wildcard special-chars\n  --address ADDRESS      bind address for outgoing socket to daemon\n  --port PORT            specify double-colon alternate port number\n  --sockopts SOCKOPTS    specify custom TCP options\n  --blocking-io          use blocking I/O for the remote shell\n  --stats                give some file-transfer stats\n  -8, --8-bit-output     leave high-bit chars unescaped in output\n  --human-readable       output numbers in a human-readable format\n  --progress             show progress during transfer\n  -i, --itemize-changes  output a change-summary for all updates\n  --out-format OUTFORMAT\n                         output updates using the specified FORMAT\n  --log-file LOGFILE     log what we're doing to the specified FILE\n  --log-file-format LOGFILEFORMAT\n                         log updates using the specified FMT\n  --password-file PASSWORDFILE\n                         read daemon-access password from FILE\n  --list-only            list the files instead of copying them\n  --bwlimit BWLIMIT      limit socket I/O bandwidth\n  --outbuf OUTBUF        set output  buffering  to  None,  Line,  or  Block\n                         (N|L|B)\n  --write-batch WRITEBATCH\n                         write a batched update to FILE\n  --only-write-batch ONLYWRITEBATCH\n                         like --write-batch but w/o updating destination\n  --read-batch READBATCH\n                         read a batched update from FILE\n  --protocol PROTOCOL    force an older protocol version to be used\n  --iconv ICONV          request charset conversion of filenames\n  --checkum-seed CHECKSUMSEED\n                         set block/file checksum seed (advanced)\n  -4, --ipv4             prefer IPv4\n  -6, --ipv6             prefer IPv6\n  --version              print version number\n  --additional ADDITIONAL\n                         generic option to pass  on  to rsync; for command-\n                         line parsing to work  though,  leading dashes must\n                         get   replaced   with    '+',   eg   '--additional\n                         \"++exclude=*~\"'",
            "title": "RSync"
        },
        {
            "location": "/commandline/#ssh",
            "text": "The options of the  com.github.fracpete.rsync4j.Ssh  tool are modeled after\nthe  ssh  executable itself. Here is the help screen:  usage: com.github.fracpete.rsync4j.Ssh\n       [-h] [--output-commandline] [--maxtime MAXTIME] [-1] [-2] [-4]\n       [-6] [-A] [-a] [-b BINDADDRESS] [-C] [-c CIPHERSPEC]\n       [-D DYNAMICBINDADDRESS] [-E LOGFILE] [-e ESCAPECHAR] [-F CONFIGFILE]\n       [-f] [-G] [-g] [-I PKCS11] [-K] [-k] [-L LOCAL] [-l LOGINNAME] [-M]\n       [-m MACSPEC] [-N] [-n] [-O CONTROLCOMMAND] [-o OPTION] [-p PORT]\n       [-q] [-R REMOTE] [-s] [-T] [-t] [-v] [-vv] [-vvv] [-W FORWARDTO]\n       [-w FORWARDTUNNEL] [-X] [-x] [-Y] [-y] hostname  [command]\n\nOpenSSH  SSH  client  (remote  login   program).  No  interactive  sessions\npossible.\nSee man page:\nhttps://linux.die.net/man/1/ssh\n\npositional arguments:\n  hostname               The hostname to connect to.\n                         The hostname to connect to.\n  command                The remote command to execute.\n\noptional arguments:\n  -h, --help             show this help message and exit\n  --output-commandline   output the command-line generated  for the wrapped\n                         binary\n  --maxtime MAXTIME      set the maximum time  for  the  process  to run in\n                         seconds before getting killed\n  -1                     Forces ssh to try protocol version 1 only.\n  -2                     Forces ssh to try protocol version 2 only.\n  -4                     Forces ssh to use IPv4 addresses only.\n  -6                     Forces ssh to use IPv6 addresses only.\n  -A                     Enables forwarding  of  the  authentication  agent\n                         connection.\n  -a                     Disables forwarding  of  the  authentication agent\n                         connection.\n  -b BINDADDRESS         Use bind_address  on  the  local  machine  as  the\n                         source address of the connection.\n  -C                     Requests compression of all data.\n  -c CIPHERSPEC          Selects the  cipher  specification  for encrypting\n                         the session.\n  -D DYNAMICBINDADDRESS  Specifies  a  local   \u201cdynamic\u201d  application-level\n                         port forwarding ([bind_address:]port).\n  -E LOGFILE             Append debug logs to  log_file instead of standard\n                         error.\n  -e ESCAPECHAR          Sets the escape character for  sessions with a pty\n                         (default: \u2018~\u2019).\n  -F CONFIGFILE          Specifies an  alternative  per-user  configuration\n                         file.\n  -f                     Requests ssh  to  go  to  background  just  before\n                         command execution.\n  -G                     Causes  ssh  to  print   its  configuration  after\n                         evaluating Host and Match blocks and exit.\n  -g                     Allows remote hosts to  connect to local forwarded\n                         ports\n  -I PKCS11              Specify the PKCS#11 shared  library ssh should use\n                         to communicate with a  PKCS#11 token providing the\n                         user's private RSA key.\n  -K                     Enables    GSSAPI-based     authentication     and\n                         forwarding (delegation) of  GSSAPI  credentials to\n                         the server.\n  -k                     Disables   forwarding   (delegation)   of   GSSAPI\n                         credentials to the server.\n  -L LOCAL               Specifies that connections to  the  given TCP port\n                         or Unix socket on the  local  (client) host are to\n                         be forwarded to the given  host  and port, or Unix\n                         socket, on the remote side.\n  -l LOGINNAME           Specifies the user  to  log  in  as  on the remote\n                         machine.\n  -M                     Places the  ssh  client  into  \u201cmaster\u201d  mode  for\n                         connection sharing.\n  -m MACSPEC             A   comma-separated   list    of    MAC   (message\n                         authentication  code)  algorithms,   specified  in\n                         order of preference.\n  -N                     Do not execute a  remote  command.  This is useful\n                         for just forwarding ports.\n  -n                     Redirects   stdin   from    /dev/null   (actually,\n                         prevents reading from stdin).\n  -O CONTROLCOMMAND      Control an active  connection  multiplexing master\n                         process.\n  -o OPTION              Can be used to give options  in the format used in\n                         the configuration file.\n  -p PORT                Port to connect to on the remote host.\n  -q                     Quiet mode.  Causes  most  warning  and diagnostic\n                         messages to be suppressed.\n  -R REMOTE              Specifies that connections to  the  given TCP port\n                         or Unix socket on the  remote (server) host are to\n                         be forwarded to the given  host  and port, or Unix\n                         socket, on the local side.\n  -s                     May be used to  request  invocation of a subsystem\n                         on the remote system.\n  -T                     Disable pseudo-terminal allocation.\n  -t                     Force pseudo-terminal allocation.\n  -v                     Verbose mode.\n  -vv                    Very verbose mode.\n  -vvv                   Very, very verbose mode.\n  -W FORWARDTO           Requests that standard  input  and  output  on the\n                         client be  forwarded  to  host  on  port  over the\n                         secure channel.\n  -w FORWARDTUNNEL       Requests  tunnel   device   forwarding   with  the\n                         specified  tun(4)  devices   between   the  client\n                         (local_tun) and the server (remote_tun).\n  -X                     Enables X11 forwarding.\n  -x                     Disables X11 forwarding.\n  -Y                     Enables trusted X11 forwarding.\n  -y                     Send  log  information  using  the  syslog  system\n                         module.",
            "title": "Ssh"
        },
        {
            "location": "/commandline/#sshkeygen",
            "text": "The options of the  com.github.fracpete.rsync4j.SshKeyGen  tool are modeled after\nthe  ssh-keygen  executable itself. Here is the help screen:  usage: com.github.fracpete.rsync4j.SshKeyGen\n       [-h] [--output-commandline] [-A] [-a ROUNDS] [-B] [-b BITS]\n       [-C COMMENT] [-D PKCS11] [-E FINGERPRINT] [-e] [-F FINDHOST]\n       [-f KEYFILE] [-G CANDIDATEPRIMES] [-g] [-H] [--host] [-i]\n       [-J SCREENNUMLINES] [-j SCREENSTARTLINE] [-K SCREENCHECKPOINT] [-k]\n       [-L] [-l] [-M MEMORY] [-m KEYFORMAT] [-N NEWPASSPHRASE]\n       [-n PRINCIPALS] [-O OPTION] [-o] [-P PASSPHRASE] [-p] [-Q] [-q]\n       [-R REMOVEKEYS] [-r PRINTFINGERPRINT] [-S STARTPOINT] [-s SIGNCAKEY]\n       [-T TESTCANDIDATEPRIMES] [-t KEYTYPE] [-u] [-V VALIDITYINTERVAL]\n       [-v] [-vv] [-vvv] [-W GENERATOR] [-y] [-z SERIALNUMBER]\n       [file [file ...]]\n\nAuthentication key generation, management and conversion.\nSee man page:\nhttps://linux.die.net/man/1/ssh-keygen\n\npositional arguments:\n  file                   The key file(s).\n\noptional arguments:\n  -h, --help             show this help message and exit\n  --output-commandline   output the command-line generated  for the wrapped\n                         binary\n  -A                     For each of the key  types  (rsa1, rsa, dsa, ecdsa\n                         and ed25519) for  which  host  keys  do not exist,\n                         generate the host keys  with  the default key file\n                         path, an empty  passphrase,  default  bits for the\n                         key type, and default comment.\n  -a ROUNDS              When saving  a  new-format  private  key  (i.e. an\n                         ed25519 key or any SSH protocol  2 key when the -o\n                         flag is set), this option  specifies the number of\n                         KDF (key derivation function) rounds used.\n  -B                     Show the bubblebabble digest  of specified private\n                         or public key file.\n  -b BITS                Specifies the number of bits in the key to create.\n  -C COMMENT             Provides a new comment.\n  -D PKCS11              Download the  RSA  public  keys  provided  by  the\n                         PKCS#11 shared library pkcs11.\n  -E FINGERPRINT         Specifies the hash algorithm  used when displaying\n                         key fingerprints.\n  -e                     This option will read a  private or public OpenSSH\n                         key file and print  to  stdout  the  key in one of\n                         the formats specified by the -m option.\n  -F FINDHOST            Search   for   the   specified   hostname   in   a\n                         known_hosts file, listing any occurrences found.\n  -f KEYFILE             Specifies the filename of the key file.\n  -G CANDIDATEPRIMES     Generate candidate primes for DH-GEX..\n  -g                     Use generic DNS  format  when printing fingerprint\n                         resource records using the -r command.\n  -H                     Hash a known_hosts file.\n  --host                 When signing  a  key,  create  a  host certificate\n                         instead of a user certificate.\n  -i                     This option will read  an  unencrypted private (or\n                         public) key file in the  format specified by the -\n                         m option and print  an  OpenSSH compatible private\n                         (or public) key to stdout.\n  -J SCREENNUMLINES      Exit  after  screening  the  specified  number  of\n                         lines  while  performing  DH  candidate  screening\n                         using the -T option.\n  -j SCREENSTARTLINE     Start  screening  at  the  specified  line  number\n                         while performing DH candidate  screening using the\n                         -T option.\n  -K SCREENCHECKPOINT    Write the last line processed  to the file checkpt\n                         while performing DH candidate  screening using the\n                         -T option.\n  -k                     Generate a KRL file.\n  -L                     Prints the contents of one or more certificates.\n  -l                     Show fingerprint of specified public key file.\n  -M MEMORY              Specify  the  amount   of   memory   to   use  (in\n                         megabytes) when  generating  candidate  moduli for\n                         DH-GEX.\n  -m KEYFORMAT           Specify a key format  for  the  -i  (import) or -e\n                         (export) conversion options.\n  -N NEWPASSPHRASE       Provides the new passphrase.\n  -n PRINCIPALS          Specify one  or  more  principals  (user  or  host\n                         names)  to  be  included  in  a  certificate  when\n                         signing a key.\n  -O OPTION              Specify a certificate option when signing a key.\n  -o                     Causes ssh-keygen to save  private  keys using the\n                         new  OpenSSH   format   rather   than   the   more\n                         compatible PEM format.\n  -P PASSPHRASE          Provides the (old) passphrase.\n  -p                     Requests changing the passphrase  of a private key\n                         file instead of creating a new private key.\n  -Q                     Test whether keys have been revoked in a KRL.\n  -q                     Silence ssh-keygen.\n  -R REMOVEKEYS          Removes all  keys  belonging  to  hostname  from a\n                         known_hosts file.\n  -r PRINTFINGERPRINT    Print the SSHFP fingerprint  resource record named\n                         hostname for the specified public key file.\n  -S STARTPOINT          Specify  start  point  (in  hex)  when  generating\n                         candidate moduli for DH-GEX.\n  -s SIGNCAKEY           Certify (sign) a  public  key  using the specified\n                         CA key.\n  -T TESTCANDIDATEPRIMES\n                         Test   DH   group    exchange   candidate   primes\n                         (generated using the -G option) for safety.\n  -t KEYTYPE             Specifies the type of key to create.\n  -u                     Update a KRL.\n  -V VALIDITYINTERVAL    Specify  a  validity   interval   when  signing  a\n                         certificate.\n  -v                     Verbose mode.\n  -vv                    Very verbose mode.\n  -vvv                   Very, very verbose mode.\n  -W GENERATOR           Specify desired generator  when  testing candidate\n                         moduli for DH-GEX.\n  -y                     This option will  read  a  private  OpenSSH format\n                         file and print an OpenSSH public key to stdout.\n  -z SERIALNUMBER        Specifies a serial number  to  be  embedded in the\n                         certificate to distinguish  this  certificate from\n                         others from the same CA.",
            "title": "SshKeyGen"
        },
        {
            "location": "/java/",
            "text": "Rsync\n\n\nHere is an example of configuring and running \nrsync\n from within Java, only \noutputting the data from stdout/stderr after the process completes: \n\n\nimport com.github.fracpete.rsync4j.RSync;\nimport com.github.fracpete.processoutput4j.output.CollectingProcessOutput;\n...\nRSync rsync = new RSync()\n  .source(\"/one/place/\")\n  .destination(\"/other/place/\")\n  .recursive(true);\n// or if you prefer using commandline options:\n// rsync.setOptions(new String[]{\"-r\", \"/one/place/\", \"/other/place/\"});\nCollectingProcessOutput output = rsync.execute();\nSystem.out.println(output.getStdOut());\nSystem.out.println(\"Exit code: \" + output.getExitCode());\nif (output.getExitCode() > 0)\n  System.err.println(output.getStdErr());\n\n\n\n\nThis example outputs stdout/stderr from the \nrsync\n process as it occurs, \nrather than waiting till the end:\n\n\nimport com.github.fracpete.rsync4j.RSync;\nimport com.github.fracpete.processoutput4j.output.ConsoleOutputProcessOutput;\n...\nRSync rsync = new RSync()\n  .source(\"/one/place/\")\n  .destination(\"/other/place/\")\n  .archive(true)\n  .delete(true);\nConsoleOutputProcessOutput output = new ConsoleOutputProcessOutput();\noutput.monitor(rsync.builder());\n\n\n\n\nIf you want to process the output (stdout/stderr) from the rsync process\nyourself, then you can use \nStreamingProcessOutput\n instead of \n\nConsoleOutputProcessOutput\n. You only need to supply an object of a class\nimplementing the \nStreamingProcessOwner\n interface. Below is an example\nthat simply prefixes the output with either \n[OUT]\n or \n[ERR]\n: \n\n\nimport com.github.fracpete.rsync4j.RSync;\nimport com.github.fracpete.processoutput4j.core.StreamingProcessOutputType;\nimport com.github.fracpete.processoutput4j.core.StreamingProcessOwner;\nimport com.github.fracpete.processoutput4j.output.StreamingProcessOutput;\n\npublic static class Output implements StreamingProcessOwner {\n  public StreamingProcessOutputType getOutputType() {\n    return StreamingProcessOutputType.BOTH;\n  }\n  public void processOutput(String line, boolean stdout) {\n    System.out.println((stdout ? \"[OUT] \" : \"[ERR] \") + line);\n  }\n}\n\n...\nRSync rsync = new RSync()\n  .source(\"/one/place/\")\n  .destination(\"/other/place/\")\n  .recursive(true)\n  .verbose(true);\nStreamingProcessOutput output = new StreamingProcessOutput(new Output());\noutput.monitor(rsync.builder());\n\n\n\n\nWindows\n\n\nWhen supplying the \nrsh\n option with an identity, usually like \nssh -i /some/where/key.pub\n, \nyou need to supply the actual Windows binary and Windows path to the identity.\nYou can use the \ncom.github.fracpete.rsync4j.core.Binaries\n class to help you\nconstruct the path properly, for instance: \n\n\nRSync rsync = new RSync()\n  .source(\"C:\\\\somedir\")\n  .destination(\"D:\\\\otherdir\")\n  .recursive(true)\n  .rsh(Binaries.sshBinary() + \" -i \" + Binaries.convertPath(\"C:\\\\keys\\\\mykey.pub\"));\n\n\n\n\nMultiple sources\n\n\nYou can specify multiple sources when using the \nsources\n methods.\n\n\nEither as array:\n\n\nString[] s = new String[]{\n  \"/first/place/\", \n  \"/second/place/\",\n};\n\nRSync rsync = new RSync()\n  .sources(s)\n  .destination(\"/other/place/\")\n  .recursive(true)\n  .verbose(true);\n\n\n\n\nOr as \njava.util.List<String>\n:\n\n\nList<String> s = new ArrayList<>();\ns.add(\"/first/place\");\ns.add(\"/second/place\");\n\nRSync rsync = new RSync()\n  .sources(s)\n  .destination(\"/other/place/\")\n  .recursive(true)\n  .verbose(true);\n\n\n\n\nRsync daemon\n\n\nInstead of using rsync via ssh, you can also use the \n\nrsync daemon\n approach.\n\n\nOn the server, you can use something like this as \n/etc/rsyncd.conf\n to make \nan upload directory \n/home/public_rsync\n available under the name \nfiles\n:\n\n\npid file = /var/run/rsyncd.pid\nlock file = /var/run/rsync.lock\nlog file = /var/log/rsync.log\nport = 12000\ncharset = utf\u20138\n\n[files]\npath = /home/public_rsync\ncomment = \"public rsync share\"\nuse chroot = true\nuid = root\ngid = root\nread only = false\n\n\n\n\nFor simplicity, we just start the daemon (running on port 12000) on the server \n(192.168.1.100) as root user as follows:\n\n\nsudo rsync --daemon\n\n\n\n\nThe following command will upload the directory \n/home/myuser/some/where\n on the\n\nclient to the \nfiles\n share:\n\n\nimport com.github.fracpete.rsync4j.RSync;\nimport com.github.fracpete.processoutput4j.output.ConsoleOutputProcessOutput;\n...\nRSync rsync = new RSync()\n  .recursive(true)\n  .times(true)\n  .dirs(true)\n  .verbose(true)\n  .source(\"/home/myuser/some/where\")\n  .destination(\"rsync://192.168.1.100:12000/files/\");\nConsoleOutputProcessOutput output = new ConsoleOutputProcessOutput();\noutput.monitor(rsync.builder());\n\n\n\n\nSsh\n\n\nThe following command lists all files in the \n/tmp\n directory of the localhost\nin verbose mode and also outputting the generated command-line:\n\n\nimport com.github.fracpete.rsync4j.Ssh;\nimport com.github.fracpete.processoutput4j.output.ConsoleOutputProcessOutput;\n...\nSsh ssh = new Ssh()\n  .outputCommandline(true)\n  .verbose(1)\n  .hostname(\"localhost\")\n  .command(\"ls /tmp\");\nConsoleOutputProcessOutput output = new ConsoleOutputProcessOutput();\noutput.monitor(ssh.builder());\n\n\n\n\nSshKeyGen\n\n\nThe following command generates a key file named \ntestkey\n in your home \ndirectory of type \ndsa\n, with no pass-phrase, outputting the bubble babble \nof the key:\n\n\nimport com.github.fracpete.rsync4j.SshKeyGen;\nimport com.github.fracpete.processoutput4j.output.ConsoleOutputProcessOutput;\n...\nSshKeyGen keygen = new SshKeyGen()\n  .outputCommandline(true)\n  .verbose(1)\n  .keyType(\"dsa\")\n  .newPassPhrase(\"\")\n  .comment(\"test key\")\n  .keyFile(\"~/testkey\");\nConsoleOutputProcessOutput output = new ConsoleOutputProcessOutput();\noutput.monitor(keygen.builder());",
            "title": "Java"
        },
        {
            "location": "/java/#rsync",
            "text": "Here is an example of configuring and running  rsync  from within Java, only \noutputting the data from stdout/stderr after the process completes:   import com.github.fracpete.rsync4j.RSync;\nimport com.github.fracpete.processoutput4j.output.CollectingProcessOutput;\n...\nRSync rsync = new RSync()\n  .source(\"/one/place/\")\n  .destination(\"/other/place/\")\n  .recursive(true);\n// or if you prefer using commandline options:\n// rsync.setOptions(new String[]{\"-r\", \"/one/place/\", \"/other/place/\"});\nCollectingProcessOutput output = rsync.execute();\nSystem.out.println(output.getStdOut());\nSystem.out.println(\"Exit code: \" + output.getExitCode());\nif (output.getExitCode() > 0)\n  System.err.println(output.getStdErr());  This example outputs stdout/stderr from the  rsync  process as it occurs, \nrather than waiting till the end:  import com.github.fracpete.rsync4j.RSync;\nimport com.github.fracpete.processoutput4j.output.ConsoleOutputProcessOutput;\n...\nRSync rsync = new RSync()\n  .source(\"/one/place/\")\n  .destination(\"/other/place/\")\n  .archive(true)\n  .delete(true);\nConsoleOutputProcessOutput output = new ConsoleOutputProcessOutput();\noutput.monitor(rsync.builder());  If you want to process the output (stdout/stderr) from the rsync process\nyourself, then you can use  StreamingProcessOutput  instead of  ConsoleOutputProcessOutput . You only need to supply an object of a class\nimplementing the  StreamingProcessOwner  interface. Below is an example\nthat simply prefixes the output with either  [OUT]  or  [ERR] :   import com.github.fracpete.rsync4j.RSync;\nimport com.github.fracpete.processoutput4j.core.StreamingProcessOutputType;\nimport com.github.fracpete.processoutput4j.core.StreamingProcessOwner;\nimport com.github.fracpete.processoutput4j.output.StreamingProcessOutput;\n\npublic static class Output implements StreamingProcessOwner {\n  public StreamingProcessOutputType getOutputType() {\n    return StreamingProcessOutputType.BOTH;\n  }\n  public void processOutput(String line, boolean stdout) {\n    System.out.println((stdout ? \"[OUT] \" : \"[ERR] \") + line);\n  }\n}\n\n...\nRSync rsync = new RSync()\n  .source(\"/one/place/\")\n  .destination(\"/other/place/\")\n  .recursive(true)\n  .verbose(true);\nStreamingProcessOutput output = new StreamingProcessOutput(new Output());\noutput.monitor(rsync.builder());",
            "title": "Rsync"
        },
        {
            "location": "/java/#windows",
            "text": "When supplying the  rsh  option with an identity, usually like  ssh -i /some/where/key.pub , \nyou need to supply the actual Windows binary and Windows path to the identity.\nYou can use the  com.github.fracpete.rsync4j.core.Binaries  class to help you\nconstruct the path properly, for instance:   RSync rsync = new RSync()\n  .source(\"C:\\\\somedir\")\n  .destination(\"D:\\\\otherdir\")\n  .recursive(true)\n  .rsh(Binaries.sshBinary() + \" -i \" + Binaries.convertPath(\"C:\\\\keys\\\\mykey.pub\"));",
            "title": "Windows"
        },
        {
            "location": "/java/#multiple-sources",
            "text": "You can specify multiple sources when using the  sources  methods.  Either as array:  String[] s = new String[]{\n  \"/first/place/\", \n  \"/second/place/\",\n};\n\nRSync rsync = new RSync()\n  .sources(s)\n  .destination(\"/other/place/\")\n  .recursive(true)\n  .verbose(true);  Or as  java.util.List<String> :  List<String> s = new ArrayList<>();\ns.add(\"/first/place\");\ns.add(\"/second/place\");\n\nRSync rsync = new RSync()\n  .sources(s)\n  .destination(\"/other/place/\")\n  .recursive(true)\n  .verbose(true);",
            "title": "Multiple sources"
        },
        {
            "location": "/java/#rsync-daemon",
            "text": "Instead of using rsync via ssh, you can also use the  rsync daemon  approach.  On the server, you can use something like this as  /etc/rsyncd.conf  to make \nan upload directory  /home/public_rsync  available under the name  files :  pid file = /var/run/rsyncd.pid\nlock file = /var/run/rsync.lock\nlog file = /var/log/rsync.log\nport = 12000\ncharset = utf\u20138\n\n[files]\npath = /home/public_rsync\ncomment = \"public rsync share\"\nuse chroot = true\nuid = root\ngid = root\nread only = false  For simplicity, we just start the daemon (running on port 12000) on the server \n(192.168.1.100) as root user as follows:  sudo rsync --daemon  The following command will upload the directory  /home/myuser/some/where  on the \nclient to the  files  share:  import com.github.fracpete.rsync4j.RSync;\nimport com.github.fracpete.processoutput4j.output.ConsoleOutputProcessOutput;\n...\nRSync rsync = new RSync()\n  .recursive(true)\n  .times(true)\n  .dirs(true)\n  .verbose(true)\n  .source(\"/home/myuser/some/where\")\n  .destination(\"rsync://192.168.1.100:12000/files/\");\nConsoleOutputProcessOutput output = new ConsoleOutputProcessOutput();\noutput.monitor(rsync.builder());",
            "title": "Rsync daemon"
        },
        {
            "location": "/java/#ssh",
            "text": "The following command lists all files in the  /tmp  directory of the localhost\nin verbose mode and also outputting the generated command-line:  import com.github.fracpete.rsync4j.Ssh;\nimport com.github.fracpete.processoutput4j.output.ConsoleOutputProcessOutput;\n...\nSsh ssh = new Ssh()\n  .outputCommandline(true)\n  .verbose(1)\n  .hostname(\"localhost\")\n  .command(\"ls /tmp\");\nConsoleOutputProcessOutput output = new ConsoleOutputProcessOutput();\noutput.monitor(ssh.builder());",
            "title": "Ssh"
        },
        {
            "location": "/java/#sshkeygen",
            "text": "The following command generates a key file named  testkey  in your home \ndirectory of type  dsa , with no pass-phrase, outputting the bubble babble \nof the key:  import com.github.fracpete.rsync4j.SshKeyGen;\nimport com.github.fracpete.processoutput4j.output.ConsoleOutputProcessOutput;\n...\nSshKeyGen keygen = new SshKeyGen()\n  .outputCommandline(true)\n  .verbose(1)\n  .keyType(\"dsa\")\n  .newPassPhrase(\"\")\n  .comment(\"test key\")\n  .keyFile(\"~/testkey\");\nConsoleOutputProcessOutput output = new ConsoleOutputProcessOutput();\noutput.monitor(keygen.builder());",
            "title": "SshKeyGen"
        },
        {
            "location": "/windows/",
            "text": "On first execution, these binaries will get placed in the following directory\n(on a per user basis):\n\n\n%USERPROFILE%\\rsync4j\n\n\n\n\nBelow that directory there are \nhome/%USERNAME%/.ssh\n and \nbin\n.\n\n\nssh vs plain protocol\n\n\nBy default, plain protocol is used. If you want to use ssh, then\nsimply supply this via the dummy string \nssh\n. In Java code, this is done via \n\nrsh(\"ssh\")\n. On the command-line, via \n--rsh=ssh\n.\n\n\nSSH keys\n\n\nYou can place your ssh key pairs in the following directory:\n\n\n%USERPROFILE%\\rsync4j\\home\\%USERNAME%\\.ssh\n\n\n\n\nBinaries (32-bit)\n\n\nrsync4j\n uses the \nrsync.exe\n, \nssh.exe\n and \nssh-keygen.exe\n executables and \ntheir dependencies from the 32-bit version of \ncywgin\n.\n\n\nThe dependencies, as of 2020-02-15 (OpenSSH 8.1p1-1), are as follows:\n\n\n\n\ncygcom_err-2.dll\n\n\ncygcrypto-1.1.dll\n\n\ncyggcc_s-1.dll\n\n\ncyggssapi_krb5-2.dll\n\n\ncygiconv-2.dll\n\n\ncygintl-8.dll\n\n\ncygk5crypto-3.dll\n\n\ncygkrb5-3.dll\n\n\ncygkrb5support-0.dll\n\n\ncygpopt-0.dll\n\n\ncygwin1.dll\n\n\ncygz.dll\n\n\n\n\nYou can easily determine the dependencies by running the executables. Windows\nwill automatically pop up a dialog mentioning any DLLs that are missing. Place\nany missing DLLs in the following directory:\n\n\nrsync4j-windows-x86/src/main/resources/com/github/fracpete/rsync4j/windows-x86\n\n\n\n\nAnd list the DLLs in the following text file:\n\n\nrsync4j-windows-x86/src/main/resources/com/github/fracpete/rsync4j/windows-x86/libraries.txt\n\n\n\n\nBinaries (64-bit)\n\n\nrsync4j\n uses the \nrsync.exe\n, \nssh.exe\n and \nssh-keygen.exe\n executables and \ntheir dependencies from the 64-bit version of \ncywgin\n.\n\n\nThe dependencies, as of 2020-02-15 (OpenSSH 8.1p1-1), are as follows:\n\n\n\n\ncygcom_err-2.dll\n\n\ncygcrypto-1.1.dll\n\n\ncyggcc_s-seh-1.dll\n\n\ncyggssapi_krb5-2.dll\n\n\ncygiconv-2.dll\n\n\ncygintl-8.dll\n\n\ncygk5crypto-3.dll\n\n\ncygkrb5-3.dll\n\n\ncygkrb5support-0.dll\n\n\ncygwin1.dll\n\n\ncygz.dll\n\n\n\n\nYou can easily determine the dependencies by running the executables. Windows\nwill automatically pop up a dialog mentioning any DLLs that are missing. Place\nany missing DLLs in the following directory:\n\n\nrsync4j-windows-x86_64/src/main/resources/com/github/fracpete/rsync4j/windows-x86_64\n\n\n\n\nAnd list the DLLs in the following text file:\n\n\nrsync4j-windows-x86_64/src/main/resources/com/github/fracpete/rsync4j/windows-x86_64/libraries.txt\n\n\n\n\nPaths\n\n\nSince cygwin is being used, local paths get converted to cywgin notation.\n\n\nFor example:\n\n\nC:\\some\\path\\blah.txt\n\n\n\n\nWill get automatically get converted to:\n\n\n/cygdrive/c/some/path/blah.txt\n\n\n\n\nCustom location\n\n\nIt is possible to use another location than \n%USERPROFILE%\\rsync4j\n. You only\nhave to set up the \nRSYNC4J_HOME\n environment variable to point to the top-level\ndirectory (doesn't have to exist) where you want to house the binaries and keys.",
            "title": "Windows"
        },
        {
            "location": "/windows/#ssh-vs-plain-protocol",
            "text": "By default, plain protocol is used. If you want to use ssh, then\nsimply supply this via the dummy string  ssh . In Java code, this is done via  rsh(\"ssh\") . On the command-line, via  --rsh=ssh .",
            "title": "ssh vs plain protocol"
        },
        {
            "location": "/windows/#ssh-keys",
            "text": "You can place your ssh key pairs in the following directory:  %USERPROFILE%\\rsync4j\\home\\%USERNAME%\\.ssh",
            "title": "SSH keys"
        },
        {
            "location": "/windows/#binaries-32-bit",
            "text": "rsync4j  uses the  rsync.exe ,  ssh.exe  and  ssh-keygen.exe  executables and \ntheir dependencies from the 32-bit version of  cywgin .  The dependencies, as of 2020-02-15 (OpenSSH 8.1p1-1), are as follows:   cygcom_err-2.dll  cygcrypto-1.1.dll  cyggcc_s-1.dll  cyggssapi_krb5-2.dll  cygiconv-2.dll  cygintl-8.dll  cygk5crypto-3.dll  cygkrb5-3.dll  cygkrb5support-0.dll  cygpopt-0.dll  cygwin1.dll  cygz.dll   You can easily determine the dependencies by running the executables. Windows\nwill automatically pop up a dialog mentioning any DLLs that are missing. Place\nany missing DLLs in the following directory:  rsync4j-windows-x86/src/main/resources/com/github/fracpete/rsync4j/windows-x86  And list the DLLs in the following text file:  rsync4j-windows-x86/src/main/resources/com/github/fracpete/rsync4j/windows-x86/libraries.txt",
            "title": "Binaries (32-bit)"
        },
        {
            "location": "/windows/#binaries-64-bit",
            "text": "rsync4j  uses the  rsync.exe ,  ssh.exe  and  ssh-keygen.exe  executables and \ntheir dependencies from the 64-bit version of  cywgin .  The dependencies, as of 2020-02-15 (OpenSSH 8.1p1-1), are as follows:   cygcom_err-2.dll  cygcrypto-1.1.dll  cyggcc_s-seh-1.dll  cyggssapi_krb5-2.dll  cygiconv-2.dll  cygintl-8.dll  cygk5crypto-3.dll  cygkrb5-3.dll  cygkrb5support-0.dll  cygwin1.dll  cygz.dll   You can easily determine the dependencies by running the executables. Windows\nwill automatically pop up a dialog mentioning any DLLs that are missing. Place\nany missing DLLs in the following directory:  rsync4j-windows-x86_64/src/main/resources/com/github/fracpete/rsync4j/windows-x86_64  And list the DLLs in the following text file:  rsync4j-windows-x86_64/src/main/resources/com/github/fracpete/rsync4j/windows-x86_64/libraries.txt",
            "title": "Binaries (64-bit)"
        },
        {
            "location": "/windows/#paths",
            "text": "Since cygwin is being used, local paths get converted to cywgin notation.  For example:  C:\\some\\path\\blah.txt  Will get automatically get converted to:  /cygdrive/c/some/path/blah.txt",
            "title": "Paths"
        },
        {
            "location": "/windows/#custom-location",
            "text": "It is possible to use another location than  %USERPROFILE%\\rsync4j . You only\nhave to set up the  RSYNC4J_HOME  environment variable to point to the top-level\ndirectory (doesn't have to exist) where you want to house the binaries and keys.",
            "title": "Custom location"
        },
        {
            "location": "/faq/",
            "text": "Q\n I'm trying to sync, but it just sits there and does nothing!\n\n\nA\n Since \nrsync4j\n is not interactive, you will have to connect to the \n  remote host at least once before to add the host to the \nknown_hosts\n file.\n\n\nQ\n How do I use a specific public key pair?\n\n\nA\n You can let \nssh\n know what identity file to use using rsync's \n--rsh\n \n  option and ssh's \n-i\n option, e.g.: \nrsync --rsh=\"ssh -i /some/where/id_rsa\" ...",
            "title": "FAQ"
        },
        {
            "location": "/maven/",
            "text": "Add the following artifact to your dependencies of your \npom.xml\n:\n\n\n    <dependency>\n      <groupId>com.github.fracpete</groupId>\n      <artifactId>rsync4j-all</artifactId>\n      <version>3.1.2-17</version>\n    </dependency>",
            "title": "Maven"
        },
        {
            "location": "/releases/",
            "text": "3.1.2-17 (\nzip\n, \nspring-boot\n)\n\n\n3.1.2-16 (\nzip\n, \nspring-boot\n)\n\n\n3.1.2-15 (\nzip\n, \nspring-boot\n)\n\n\n3.1.2-14 (\nzip\n, \nspring-boot\n)\n\n\n3.1.2-13 (\nzip\n, \nspring-boot\n)\n\n\n3.1.2-12 (\nzip\n, \nspring-boot\n)\n\n\n3.1.2-11 (\nzip\n, \nspring-boot\n)\n\n\n3.1.2-10 (\nzip\n, \nspring-boot\n)\n\n\n3.1.2-9 (\nzip\n, \nspring-boot\n)\n\n\n3.1.2-8 (\nzip\n, \nspring-boot\n)\n\n\n3.1.2-7 (\nzip\n, \nspring-boot\n)\n\n\n3.1.2-6 (\nzip\n)\n\n\n3.1.2-5 (\nzip\n)",
            "title": "Releases"
        }
    ]
}